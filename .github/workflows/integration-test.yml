name: Run Tests on Pull Request
 
# Run this workflow on pull requests to main branch
on:
  pull_request:
    branches:
      - "main"
 
jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest
 
    steps:
      # Step 1: Checkout the repository code
      - name: Checkout repository
        uses: actions/checkout@v3
 
      # Step 2: Set up Node.js environment
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "22.2.0"
 
      # Step 3: Install dependencies
      - name: Install dependencies
        run: | 
          npm install
          npm i
          npm install bcrypt

 
      # Step 4: Install PostgreSQL
      - name: Install PostgreSQL
        run: |
          sudo apt-get update
          sudo apt-get install -y postgresql postgresql-contrib
 
      # Step 5: Start PostgreSQL service and create or update the test database user
      - name: Set up PostgreSQL
        run: |
          sudo service postgresql start
          sudo -u postgres psql -c "DROP DATABASE IF EXISTS ${{ secrets.DATABASE }};"
          sudo -u postgres psql -c "CREATE USER ${{ secrets.DB_USERNAME }} WITH PASSWORD '${{ secrets.DB_PASSWORD }}';"
          sudo -u postgres psql -c "CREATE DATABASE ${{ secrets.DATABASE }};"
          sudo -u postgres psql -c "GRANT ALL PRIVILEGES ON DATABASE ${{ secrets.DATABASE }} TO ${{ secrets.DB_USERNAME }};"
          sudo -u postgres psql -c "ALTER DATABASE ${{ secrets.DATABASE }} OWNER TO ${{ secrets.DB_USERNAME }};"
          
        
        
      # Step 6: Run the tests
      - name: Run tests
        env:
          HOST: ${{ secrets.HOST }}
          DB_USERNAME: ${{ secrets.DB_USERNAME }}
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
          DATABASE: ${{ secrets.DATABASE }}
          PORT: ${{ secrets.PORT }}
          DB_DIALECT: ${{ secrets.DB_DIALECT }}
        run: npm test
