name: Integration Actions to Build Custom Image

on:
  pull_request:
    types:
      - closed
    branches:
      - main

jobs:
  if_pull_request_merge:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    env:
      HOST: ${{ secrets.HOST }}
      DB_USERNAME: ${{ secrets.DB_USERNAME }}
      DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
      DATABASE: ${{ secrets.DATABASE }}
      PORT: ${{ secrets.PORT }}
      DB_DIALECT: ${{ secrets.DB_DIALECT }}
      AWS_REGION: ${{ secrets.AWS_REGION }}
      SOURCE_AMI: ${{ secrets.SOURCE_AMI }}
      SSH_USERNAME: ${{ secrets.SSH_USERNAME }}
      SUBNET_ID: ${{ secrets.SUBNET_ID }}
      DEV_ACCOUNT_ID: ${{ secrets.DEV_ACCOUNT_ID }}        # DEV AWS Account ID
      DEMO_ACCOUNT_ID: ${{ secrets.DEMO_ACCOUNT_ID }}      # DEMO AWS Account ID

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      # Step 2: Install AWS CLI
      - name: Install AWS CLI
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      # Step 3: Install Packer
      - name: Setup Packer
        uses: hashicorp/setup-packer@v3
        with:
          version: latest

      # Step 4: Create Zip File of Webapp Repo
      - name: Create Zip File of Webapp Repo
        run: |
          zip -r webapp.zip .

      # Step 4: Packer build to create machine image
      - name: Init and Build Custom Image
        run: |
          packer init application-custom-image.pkr.hcl
          packer build application-custom-image.pkr.hcl

      # Step 7: Share the AMI with DEMO Account
      # - name: Share AMI with DEMO Account
      #   run: |
      #     AMI_ID=$(aws ec2 describe-images \
      #         --filters "Name=name,Values=${{ env.AMI_NAME }}" \
      #         --query 'Images[*].ImageId' --output text)

      #     if [ -n "$AMI_ID" ]; then
      #       echo "Sharing AMI $AMI_ID with DEMO account..."
      #       aws ec2 modify-image-attribute --image-id "$AMI_ID" \
      #         --launch-permission "{\"Add\": [{\"UserId\": \"${{ env.DEMO_ACCOUNT_ID }}\"}]}"
      #     else
      #       echo "AMI not found, exiting."
      #       exit 1
      #     fi